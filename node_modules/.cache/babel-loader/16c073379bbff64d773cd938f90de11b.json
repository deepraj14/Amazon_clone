{"ast":null,"code":"import Product from \"./Product\";\nexport const initialState = {\n  basket: [],\n  user: null\n}; //this is a selector and its a good practice to have selectors\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction finder(ele) {\n  let a;\n  basket.map(x => {\n    if (x.id === ele) {\n      return x.index;\n    }\n  });\n} //we can change this order of item and amoutn,here item.price is appending in item each time\n\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      return { ...state,\n        basket: state.basket.filter(x => {\n          return x.id !== action.id;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/amazon_clone/src/reducer.js"],"names":["Product","initialState","basket","user","getBasketTotal","reduce","amount","item","price","finder","ele","a","map","x","id","index","reducer","state","action","console","log","type","filter"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAO,MAAMC,YAAY,GAAC;AACtBC,EAAAA,MAAM,EAAC,EADe;AAEtBC,EAAAA,IAAI,EAAC;AAFiB,CAAnB,C,CAMP;;AACA,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CADK;;AAIN,SAASG,MAAT,CAAgBC,GAAhB,EACA;AACE,MAAIC,CAAJ;AACAT,EAAAA,MAAM,CAACU,GAAP,CAAYC,CAAD,IAAK;AACd,QAAGA,CAAC,CAACC,EAAF,KAAOJ,GAAV,EACA;AACE,aAAOG,CAAC,CAACE,KAAT;AACD;AACF,GALD;AAMD,C,CAGF;;;AACE,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELf,QAAAA,MAAM,EAAE,CAAC,GAAGe,KAAK,CAACf,MAAV,EAAkBgB,MAAM,CAACX,IAAzB;AAFH,OAAP;;AAKF,SAAK,oBAAL;AACE,aAAM,EACJ,GAAGU,KADC;AAEJf,QAAAA,MAAM,EAACe,KAAK,CAACf,MAAN,CAAaoB,MAAb,CAAqBT,CAAD,IAAK;AAAC,iBAAOA,CAAC,CAACC,EAAF,KAAOI,MAAM,CAACJ,EAArB;AAAwB,SAAlD;AAFH,OAAN;;AAKF;AACE,aAAOG,KAAP;AAdJ;AAmBD,CArBD;;AAsBF,eAAeD,OAAf","sourcesContent":["import Product from \"./Product\";\r\nexport const initialState={\r\n    basket:[],\r\n    user:null\r\n}\r\n\r\n\r\n//this is a selector and its a good practice to have selectors\r\nexport const getBasketTotal = (basket) => \r\n  basket?.reduce((amount, item) => item.price + amount, 0);\r\n\r\n\r\n function finder(ele)\r\n {\r\n   let a;\r\n   basket.map((x)=>{\r\n     if(x.id===ele)\r\n     {\r\n       return x.index;\r\n     }\r\n   })\r\n }\r\n\r\n\r\n//we can change this order of item and amoutn,here item.price is appending in item each time\r\n  const reducer = (state, action) => {\r\n    console.log(action);\r\n    switch (action.type) {\r\n      case \"ADD_TO_BASKET\":\r\n        return {\r\n          ...state,\r\n          basket: [...state.basket, action.item],\r\n        };\r\n      \r\n      case \"REMOVE_FROM_BASKET\":\r\n        return{\r\n          ...state,\r\n          basket:state.basket.filter((x)=>{return x.id!==action.id})\r\n        }\r\n\r\n      default:\r\n        return state;\r\n\r\n\r\n    }\r\n\r\n  };\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}